import numpy as np
import pandas as pd
import datetime
# Project Euler Problem 12

# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?

def find_facts(n):
    cnt = 1
    a = n/2
    d = np.arange(1,np.ceil(a)).tolist()
    for x in d:
        if n%x == 0:
            cnt += 1
    return cnt
timee = datetime.datetime.now()
print(timee)
aa = np.arange(1,100000, dtype = 'uint64').tolist()

z = [0.5*n*(n+1) for n in range(500, 100000)]
for x in z:
    if find_facts(x) > 500:
        print('over 499', x)
        break

print(datetime.datetime.now()-timee)